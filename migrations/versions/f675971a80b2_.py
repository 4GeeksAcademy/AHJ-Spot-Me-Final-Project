"""empty message

Revision ID: f675971a80b2
Revises: 
Create Date: 2024-11-15 23:20:26.753867

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = 'f675971a80b2'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('exercise_interests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.Enum('STRENGTH', 'CARDIO', 'CROSSFIT', 'FUNCTIONAL', 'POWERLIFTING', 'BODYBUILDING', 'HIIT', 'YOGA', 'CALISTHENICS', name='exercisecategory'), nullable=False),
    sa.Column('description', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('gym_preference',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('address', sa.String(), nullable=True),
    sa.Column('city', sa.String(), nullable=False),
    sa.Column('state', sa.String(), nullable=False),
    sa.Column('latitude', sa.Float(), nullable=True),
    sa.Column('longitude', sa.Float(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('name')
    )
    op.create_table('user',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('google_id', sa.String(), nullable=True),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('password_hash', sa.String(), nullable=True),
    sa.Column('state', sa.String(length=50), nullable=True),
    sa.Column('city', sa.String(length=100), nullable=True),
    sa.Column('gender', sa.Enum('MALE', 'FEMALE', 'NON_BINARY', 'PREFER_NOT_TO_SAY', name='gender'), nullable=True),
    sa.Column('age', sa.Integer(), nullable=True),
    sa.Column('bio', sa.String(), nullable=True),
    sa.Column('latitude', sa.String(), nullable=True),
    sa.Column('longitude', sa.String(), nullable=True),
    sa.Column('profile_image', sa.String(), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('google_id')
    )
    op.create_table('likes',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('liker_id', sa.Integer(), nullable=False),
    sa.Column('liked_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['liked_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['liker_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('liker_id', 'liked_id', name='unique_like')
    )
    op.create_table('matches',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user1_id', sa.Integer(), nullable=False),
    sa.Column('user2_id', sa.Integer(), nullable=False),
    sa.Column('created_at', sa.DateTime(), nullable=True),
    sa.Column('status', sa.String(), nullable=True),
    sa.Column('last_interaction', sa.DateTime(), nullable=True),
    sa.ForeignKeyConstraint(['user1_id'], ['user.id'], ),
    sa.ForeignKeyConstraint(['user2_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('user1_id', 'user2_id', name='unique_match')
    )
    op.create_table('user_exercise_interests',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('exercise_interest_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['exercise_interest_id'], ['exercise_interests.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'exercise_interest_id')
    )
    op.create_table('user_gym_preferences',
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('gym_preference_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['gym_preference_id'], ['gym_preference.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('user_id', 'gym_preference_id')
    )
    op.create_table('workout_schedule',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('gym_preference_id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('day_of_week', sa.Enum('MONDAY', 'TUESDAY', 'WEDNESDAY', 'THURSDAY', 'FRIDAY', 'SATURDAY', 'SUNDAY', name='dayofweek'), nullable=False),
    sa.Column('time_slot', sa.Enum('EARLY_MORNING', 'MORNING', 'MIDDAY', 'AFTERNOON', 'EVENING', 'NIGHT', name='timeslot'), nullable=False),
    sa.ForeignKeyConstraint(['gym_preference_id'], ['gym_preference.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('gym_preference_id', 'user_id', 'day_of_week', 'time_slot')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('workout_schedule')
    op.drop_table('user_gym_preferences')
    op.drop_table('user_exercise_interests')
    op.drop_table('matches')
    op.drop_table('likes')
    op.drop_table('user')
    op.drop_table('gym_preference')
    op.drop_table('exercise_interests')
    # ### end Alembic commands ###
